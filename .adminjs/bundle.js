(function (React) {
  'use strict';

  function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

  var React__default = /*#__PURE__*/_interopDefault(React);

  const MyAvatarComponent = () => {
    const [avatarUrl, setAvatarUrl] = React.useState("");
    const styles = {
      avatarContainer: {
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
        width: "50px",
        height: "50px",
        borderRadius: "50%",
        overflow: "hidden",
        border: "2px solid #ddd",
        backgroundColor: "#f0f0f0"
      },
      avatar: {
        width: "100%",
        height: "100%",
        objectFit: "cover"
      }
    };
    React.useEffect(() => {
      const fetchUser = async () => {
        try {
          const response = await fetch("https://randomuser.me/api/");
          const data = await response.json();
          const imageUrl = data.results[0].picture.large;
          setAvatarUrl(imageUrl);
        } catch (error) {
          console.error("Error fetching the random user image:", error);
        }
      };
      fetchUser();
    }, []);
    return /*#__PURE__*/React__default.default.createElement("div", {
      style: styles.avatarContainer
    }, avatarUrl && /*#__PURE__*/React__default.default.createElement("img", {
      src: avatarUrl,
      alt: "User Avatar",
      style: styles.avatar
    }));
  };

  AdminJS.UserComponents = {};
  AdminJS.UserComponents.MyAvatarComponent = MyAvatarComponent;

})(React);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwic291cmNlcyI6WyIuLi9Db21wb25lbnRzL2F2YXRhci5qc3giLCJlbnRyeS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xyXG5cclxuY29uc3QgTXlBdmF0YXJDb21wb25lbnQgPSAoKSA9PiB7XHJcbiAgY29uc3QgW2F2YXRhclVybCwgc2V0QXZhdGFyVXJsXSA9IHVzZVN0YXRlKFwiXCIpO1xyXG5cclxuICBjb25zdCBzdHlsZXMgPSB7XHJcbiAgICBhdmF0YXJDb250YWluZXI6IHtcclxuICAgICAgZGlzcGxheTogXCJmbGV4XCIsXHJcbiAgICAgIGp1c3RpZnlDb250ZW50OiBcImNlbnRlclwiLFxyXG4gICAgICBhbGlnbkl0ZW1zOiBcImNlbnRlclwiLFxyXG4gICAgICB3aWR0aDogXCI1MHB4XCIsXHJcbiAgICAgIGhlaWdodDogXCI1MHB4XCIsXHJcbiAgICAgIGJvcmRlclJhZGl1czogXCI1MCVcIixcclxuICAgICAgb3ZlcmZsb3c6IFwiaGlkZGVuXCIsXHJcbiAgICAgIGJvcmRlcjogXCIycHggc29saWQgI2RkZFwiLFxyXG4gICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI2YwZjBmMFwiLFxyXG4gICAgfSxcclxuICAgIGF2YXRhcjoge1xyXG4gICAgICB3aWR0aDogXCIxMDAlXCIsXHJcbiAgICAgIGhlaWdodDogXCIxMDAlXCIsXHJcbiAgICAgIG9iamVjdEZpdDogXCJjb3ZlclwiLFxyXG4gICAgfSxcclxuICB9O1xyXG5cclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgY29uc3QgZmV0Y2hVc2VyID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goXCJodHRwczovL3JhbmRvbXVzZXIubWUvYXBpL1wiKTtcclxuICAgICAgICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpO1xyXG4gICAgICAgIGNvbnN0IGltYWdlVXJsID0gZGF0YS5yZXN1bHRzWzBdLnBpY3R1cmUubGFyZ2U7XHJcbiAgICAgICAgc2V0QXZhdGFyVXJsKGltYWdlVXJsKTtcclxuICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiRXJyb3IgZmV0Y2hpbmcgdGhlIHJhbmRvbSB1c2VyIGltYWdlOlwiLCBlcnJvcik7XHJcbiAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgZmV0Y2hVc2VyKCk7XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPGRpdiBzdHlsZT17c3R5bGVzLmF2YXRhckNvbnRhaW5lcn0+XHJcbiAgICAgIHthdmF0YXJVcmwgJiYgKFxyXG4gICAgICAgIDxpbWcgc3JjPXthdmF0YXJVcmx9IGFsdD1cIlVzZXIgQXZhdGFyXCIgc3R5bGU9e3N0eWxlcy5hdmF0YXJ9IC8+XHJcbiAgICAgICl9XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgTXlBdmF0YXJDb21wb25lbnQ7XHJcbiIsIkFkbWluSlMuVXNlckNvbXBvbmVudHMgPSB7fVxuaW1wb3J0IE15QXZhdGFyQ29tcG9uZW50IGZyb20gJy4uL0NvbXBvbmVudHMvYXZhdGFyJ1xuQWRtaW5KUy5Vc2VyQ29tcG9uZW50cy5NeUF2YXRhckNvbXBvbmVudCA9IE15QXZhdGFyQ29tcG9uZW50Il0sIm5hbWVzIjpbIk15QXZhdGFyQ29tcG9uZW50IiwiYXZhdGFyVXJsIiwic2V0QXZhdGFyVXJsIiwidXNlU3RhdGUiLCJzdHlsZXMiLCJhdmF0YXJDb250YWluZXIiLCJkaXNwbGF5IiwianVzdGlmeUNvbnRlbnQiLCJhbGlnbkl0ZW1zIiwid2lkdGgiLCJoZWlnaHQiLCJib3JkZXJSYWRpdXMiLCJvdmVyZmxvdyIsImJvcmRlciIsImJhY2tncm91bmRDb2xvciIsImF2YXRhciIsIm9iamVjdEZpdCIsInVzZUVmZmVjdCIsImZldGNoVXNlciIsInJlc3BvbnNlIiwiZmV0Y2giLCJkYXRhIiwianNvbiIsImltYWdlVXJsIiwicmVzdWx0cyIsInBpY3R1cmUiLCJsYXJnZSIsImVycm9yIiwiY29uc29sZSIsIlJlYWN0IiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwic3JjIiwiYWx0IiwiQWRtaW5KUyIsIlVzZXJDb21wb25lbnRzIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0VBRUEsTUFBTUEsaUJBQWlCLEdBQUdBLE1BQU07SUFDOUIsTUFBTSxDQUFDQyxTQUFTLEVBQUVDLFlBQVksQ0FBQyxHQUFHQyxjQUFRLENBQUMsRUFBRSxDQUFDO0VBRTlDLEVBQUEsTUFBTUMsTUFBTSxHQUFHO0VBQ2JDLElBQUFBLGVBQWUsRUFBRTtFQUNmQyxNQUFBQSxPQUFPLEVBQUUsTUFBTTtFQUNmQyxNQUFBQSxjQUFjLEVBQUUsUUFBUTtFQUN4QkMsTUFBQUEsVUFBVSxFQUFFLFFBQVE7RUFDcEJDLE1BQUFBLEtBQUssRUFBRSxNQUFNO0VBQ2JDLE1BQUFBLE1BQU0sRUFBRSxNQUFNO0VBQ2RDLE1BQUFBLFlBQVksRUFBRSxLQUFLO0VBQ25CQyxNQUFBQSxRQUFRLEVBQUUsUUFBUTtFQUNsQkMsTUFBQUEsTUFBTSxFQUFFLGdCQUFnQjtFQUN4QkMsTUFBQUEsZUFBZSxFQUFFO09BQ2xCO0VBQ0RDLElBQUFBLE1BQU0sRUFBRTtFQUNOTixNQUFBQSxLQUFLLEVBQUUsTUFBTTtFQUNiQyxNQUFBQSxNQUFNLEVBQUUsTUFBTTtFQUNkTSxNQUFBQSxTQUFTLEVBQUU7RUFDYjtLQUNEO0VBRURDLEVBQUFBLGVBQVMsQ0FBQyxNQUFNO0VBQ2QsSUFBQSxNQUFNQyxTQUFTLEdBQUcsWUFBWTtRQUM1QixJQUFJO0VBQ0YsUUFBQSxNQUFNQyxRQUFRLEdBQUcsTUFBTUMsS0FBSyxDQUFDLDRCQUE0QixDQUFDO0VBQzFELFFBQUEsTUFBTUMsSUFBSSxHQUFHLE1BQU1GLFFBQVEsQ0FBQ0csSUFBSSxFQUFFO1VBQ2xDLE1BQU1DLFFBQVEsR0FBR0YsSUFBSSxDQUFDRyxPQUFPLENBQUMsQ0FBQyxDQUFDLENBQUNDLE9BQU8sQ0FBQ0MsS0FBSztVQUM5Q3hCLFlBQVksQ0FBQ3FCLFFBQVEsQ0FBQztTQUN2QixDQUFDLE9BQU9JLEtBQUssRUFBRTtFQUNkQyxRQUFBQSxPQUFPLENBQUNELEtBQUssQ0FBQyx1Q0FBdUMsRUFBRUEsS0FBSyxDQUFDO0VBQy9EO09BQ0Q7RUFFRFQsSUFBQUEsU0FBUyxFQUFFO0tBQ1osRUFBRSxFQUFFLENBQUM7SUFFTixvQkFDRVcsc0JBQUEsQ0FBQUMsYUFBQSxDQUFBLEtBQUEsRUFBQTtNQUFLQyxLQUFLLEVBQUUzQixNQUFNLENBQUNDO0VBQWdCLEdBQUEsRUFDaENKLFNBQVMsaUJBQ1I0QixzQkFBQSxDQUFBQyxhQUFBLENBQUEsS0FBQSxFQUFBO0VBQUtFLElBQUFBLEdBQUcsRUFBRS9CLFNBQVU7RUFBQ2dDLElBQUFBLEdBQUcsRUFBQyxhQUFhO01BQUNGLEtBQUssRUFBRTNCLE1BQU0sQ0FBQ1c7RUFBTyxHQUFFLENBRTdELENBQUM7RUFFVixDQUFDOztFQzlDRG1CLE9BQU8sQ0FBQ0MsY0FBYyxHQUFHLEVBQUU7RUFFM0JELE9BQU8sQ0FBQ0MsY0FBYyxDQUFDbkMsaUJBQWlCLEdBQUdBLGlCQUFpQjs7Ozs7OyJ9
